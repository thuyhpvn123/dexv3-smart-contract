{"abi":[{"type":"function","name":"quoteExactInput","inputs":[{"name":"path","type":"bytes","internalType":"bytes"},{"name":"flag","type":"uint256[]","internalType":"uint256[]"},{"name":"amountIn","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"v3SqrtPriceX96AfterList","type":"uint160[]","internalType":"uint160[]"},{"name":"v3InitializedTicksCrossedList","type":"uint32[]","internalType":"uint32[]"},{"name":"v3SwapGasEstimate","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"quoteExactInputSingleStable","inputs":[{"name":"params","type":"tuple","internalType":"struct IMixedRouteQuoterV1.QuoteExactInputSingleStableParams","components":[{"name":"tokenIn","type":"address","internalType":"address"},{"name":"tokenOut","type":"address","internalType":"address"},{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"flag","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"amountOut","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"quoteExactInputSingleV2","inputs":[{"name":"params","type":"tuple","internalType":"struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params","components":[{"name":"tokenIn","type":"address","internalType":"address"},{"name":"tokenOut","type":"address","internalType":"address"},{"name":"amountIn","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"amountOut","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"quoteExactInputSingleV3","inputs":[{"name":"params","type":"tuple","internalType":"struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params","components":[{"name":"tokenIn","type":"address","internalType":"address"},{"name":"tokenOut","type":"address","internalType":"address"},{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]}],"outputs":[{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"sqrtPriceX96After","type":"uint160","internalType":"uint160"},{"name":"initializedTicksCrossed","type":"uint32","internalType":"uint32"},{"name":"gasEstimate","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"quoteExactInput(bytes,uint256[],uint256)":"558b66fb","quoteExactInputSingleStable((address,address,uint256,uint256))":"88cf8466","quoteExactInputSingleV2((address,address,uint256))":"8a499286","quoteExactInputSingleV3((address,address,uint256,uint24,uint160))":"b174a0a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"flag\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"v3SqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"v3InitializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"v3SwapGasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"}],\"internalType\":\"struct IMixedRouteQuoterV1.QuoteExactInputSingleStableParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingleStable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"internalType\":\"struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingleV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingleV3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256[],uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"flag\":\"0 for V3, 1 for V2, 2 for 2pool, 3 for 3pool\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\",\"v3InitializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each v3 pool in the path, 0 for v2 or stable pools\",\"v3SqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each v3 pool in the path, 0 for v2 or stable pools\",\"v3SwapGasEstimate\":\"The estimate of the gas that the v3 swaps in the path consume\"}},\"quoteExactInputSingleStable((address,address,uint256,uint256))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleStableParams` tokenIn The token being swapped in tokenOut The token being swapped out amountIn The desired input amount flag The token amount in a single Stable pool. 2 for 2pool, 3 for 3pool\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\"}},\"quoteExactInputSingleV2((address,address,uint256))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleV2Params` tokenIn The token being swapped in tokenOut The token being swapped out amountIn The desired input amount\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\"}},\"quoteExactInputSingleV3((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}}},\"title\":\"MixedRouteQuoterV1 Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256[],uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingleStable((address,address,uint256,uint256))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single Stable pool\"},\"quoteExactInputSingleV2((address,address,uint256))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single V2 pool\"},\"quoteExactInputSingleV3((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"}},\"notice\":\"Supports quoting the calculated amounts for exact input swaps. Is specialized for routes containing a mix of Stable, V2 and V3 liquidity.For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/router/contracts/interfaces/IMixedRouteQuoterV1.sol\":\"IMixedRouteQuoterV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable@3.4.0/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts@3.4.0-solc-0.7/=node_modules/@openzeppelin/contracts/\",\":@pancakeswap/=node_modules/@pancakeswap/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/router/contracts/interfaces/IMixedRouteQuoterV1.sol\":{\"keccak256\":\"0xe668fbb8e49646d62a433979927ce81815b43b1aa61a8aadf4a1c7fa36fb307d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e589bd70f33d9c911822993f2209182cdc3f4e9341bb36b14da672fca47bb989\",\"dweb:/ipfs/QmWUVwTxPssSt14eStSTtsJP9XZLaPRPQJX6qeXHcUiVvm\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256[]","name":"flag","type":"uint256[]"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"quoteExactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint160[]","name":"v3SqrtPriceX96AfterList","type":"uint160[]"},{"internalType":"uint32[]","name":"v3InitializedTicksCrossedList","type":"uint32[]"},{"internalType":"uint256","name":"v3SwapGasEstimate","type":"uint256"}]},{"inputs":[{"internalType":"struct IMixedRouteQuoterV1.QuoteExactInputSingleStableParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"flag","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"quoteExactInputSingleStable","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}]},{"inputs":[{"internalType":"struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params","name":"params","type":"tuple","components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"quoteExactInputSingleV2","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}]},{"inputs":[{"internalType":"struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params","name":"params","type":"tuple","components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]}],"stateMutability":"nonpayable","type":"function","name":"quoteExactInputSingleV3","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceX96After","type":"uint160"},{"internalType":"uint32","name":"initializedTicksCrossed","type":"uint32"},{"internalType":"uint256","name":"gasEstimate","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"quoteExactInput(bytes,uint256[],uint256)":{"params":{"amountIn":"The amount of the first token to swap","flag":"0 for V3, 1 for V2, 2 for 2pool, 3 for 3pool","path":"The path of the swap, i.e. each token pair and the pool fee"},"returns":{"amountOut":"The amount of the last token that would be received","v3InitializedTicksCrossedList":"List of the initialized ticks that the swap crossed for each v3 pool in the path, 0 for v2 or stable pools","v3SqrtPriceX96AfterList":"List of the sqrt price after the swap for each v3 pool in the path, 0 for v2 or stable pools","v3SwapGasEstimate":"The estimate of the gas that the v3 swaps in the path consume"}},"quoteExactInputSingleStable((address,address,uint256,uint256))":{"params":{"params":"The params for the quote, encoded as `QuoteExactInputSingleStableParams` tokenIn The token being swapped in tokenOut The token being swapped out amountIn The desired input amount flag The token amount in a single Stable pool. 2 for 2pool, 3 for 3pool"},"returns":{"amountOut":"The amount of `tokenOut` that would be received"}},"quoteExactInputSingleV2((address,address,uint256))":{"params":{"params":"The params for the quote, encoded as `QuoteExactInputSingleV2Params` tokenIn The token being swapped in tokenOut The token being swapped out amountIn The desired input amount"},"returns":{"amountOut":"The amount of `tokenOut` that would be received"}},"quoteExactInputSingleV3((address,address,uint256,uint24,uint160))":{"params":{"params":"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"},"returns":{"amountOut":"The amount of `tokenOut` that would be received","gasEstimate":"The estimate of the gas that the swap consumes","initializedTicksCrossed":"The number of initialized ticks that the swap crossed","sqrtPriceX96After":"The sqrt price of the pool after the swap"}}},"version":1},"userdoc":{"kind":"user","methods":{"quoteExactInput(bytes,uint256[],uint256)":{"notice":"Returns the amount out received for a given exact input swap without executing the swap"},"quoteExactInputSingleStable((address,address,uint256,uint256))":{"notice":"Returns the amount out received for a given exact input but for a swap of a single Stable pool"},"quoteExactInputSingleV2((address,address,uint256))":{"notice":"Returns the amount out received for a given exact input but for a swap of a single V2 pool"},"quoteExactInputSingleV3((address,address,uint256,uint24,uint160))":{"notice":"Returns the amount out received for a given exact input but for a swap of a single pool"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable@3.4.0/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts@3.4.0-solc-0.7/=node_modules/@openzeppelin/contracts/","@pancakeswap/=node_modules/@pancakeswap/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/router/contracts/interfaces/IMixedRouteQuoterV1.sol":"IMixedRouteQuoterV1"},"evmVersion":"istanbul","libraries":{}},"sources":{"src/router/contracts/interfaces/IMixedRouteQuoterV1.sol":{"keccak256":"0xe668fbb8e49646d62a433979927ce81815b43b1aa61a8aadf4a1c7fa36fb307d","urls":["bzz-raw://e589bd70f33d9c911822993f2209182cdc3f4e9341bb36b14da672fca47bb989","dweb:/ipfs/QmWUVwTxPssSt14eStSTtsJP9XZLaPRPQJX6qeXHcUiVvm"],"license":"GPL-2.0-or-later"}},"version":1},"id":112}