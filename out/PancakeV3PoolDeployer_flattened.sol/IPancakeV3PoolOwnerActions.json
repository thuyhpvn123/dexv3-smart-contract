{"abi":[{"type":"function","name":"collectProtocol","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount0Requested","type":"uint128","internalType":"uint128"},{"name":"amount1Requested","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"amount0","type":"uint128","internalType":"uint128"},{"name":"amount1","type":"uint128","internalType":"uint128"}],"stateMutability":"nonpayable"},{"type":"function","name":"setFeeProtocol","inputs":[{"name":"feeProtocol0","type":"uint32","internalType":"uint32"},{"name":"feeProtocol1","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setLmPool","inputs":[{"name":"lmPool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint32,uint32)":"b0d0d211","setLmPool(address)":"cc7e7fa2"},"rawMetadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"feeProtocol0\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol1\",\"type\":\"uint32\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lmPool\",\"type\":\"address\"}],\"name\":\"setLmPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint32,uint32)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint32,uint32)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"setLmPool(address)\":{\"notice\":\"Set the LM pool to enable liquidity mining\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v3-core/contracts/PancakeV3PoolDeployer_flattened.sol\":\"IPancakeV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable@3.4.0/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts@3.4.0-solc-0.7/=node_modules/@openzeppelin/contracts/\",\":@pancakeswap/=node_modules/@pancakeswap/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/v3-core/contracts/PancakeV3PoolDeployer_flattened.sol\":{\"keccak256\":\"0xb79dca837789d4c73c51dfe3cf02882830fded122e3779d86b91ea72fbe6c303\",\"urls\":[\"bzz-raw://14019a56e4cf7d425543598d5b1459cd5ce5406cc5e19983f22473b9df8dccf8\",\"dweb:/ipfs/Qmds97GpCmrGZ3RvGcEcTYroQBhejbYd5qyFyiE1Snzz2i\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"stateMutability":"nonpayable","type":"function","name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}]},{"inputs":[{"internalType":"uint32","name":"feeProtocol0","type":"uint32"},{"internalType":"uint32","name":"feeProtocol1","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"setFeeProtocol"},{"inputs":[{"internalType":"address","name":"lmPool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setLmPool"}],"devdoc":{"kind":"dev","methods":{"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"setFeeProtocol(uint32,uint32)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}}},"version":1},"userdoc":{"kind":"user","methods":{"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"setFeeProtocol(uint32,uint32)":{"notice":"Set the denominator of the protocol's % share of the fees"},"setLmPool(address)":{"notice":"Set the LM pool to enable liquidity mining"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable@3.4.0/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts@3.4.0-solc-0.7/=node_modules/@openzeppelin/contracts/","@pancakeswap/=node_modules/@pancakeswap/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/v3-core/contracts/PancakeV3PoolDeployer_flattened.sol":"IPancakeV3PoolOwnerActions"},"evmVersion":"istanbul","libraries":{}},"sources":{"src/v3-core/contracts/PancakeV3PoolDeployer_flattened.sol":{"keccak256":"0xb79dca837789d4c73c51dfe3cf02882830fded122e3779d86b91ea72fbe6c303","urls":["bzz-raw://14019a56e4cf7d425543598d5b1459cd5ce5406cc5e19983f22473b9df8dccf8","dweb:/ipfs/Qmds97GpCmrGZ3RvGcEcTYroQBhejbYd5qyFyiE1Snzz2i"],"license":null}},"version":1},"id":73}