{"abi":[],"bytecode":{"object":"0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d867eede3f998b617ffb64da6881e61234d377068e8a3ec6e385a5183f9885464736f6c63430007060033","sourceMap":"12883:3780:246:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d867eede3f998b617ffb64da6881e61234d377068e8a3ec6e385a5183f9885464736f6c63430007060033","sourceMap":"12883:3780:246:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v3-periphery/contracts/lens/QuoterV2_flattened.sol\":\"TickBitmap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable@3.4.0/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts@3.4.0-solc-0.7/=node_modules/@openzeppelin/contracts/\",\":@pancakeswap/=node_modules/@pancakeswap/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/v3-periphery/contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0xdfeb915caf4066d17857bcb8b16080ac111be679311484f653f9ad54d5fd7b9f\",\"urls\":[\"bzz-raw://ad9c2d4286068a4b05b71a0af682a05f955c75ec978ae12d4d014fccb9fcb7aa\",\"dweb:/ipfs/QmXZAvaoTAFQGjnJnEYumjVyC1ZyXaeDGSTczVPF1UHY5J\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable@3.4.0/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts@3.4.0-solc-0.7/=node_modules/@openzeppelin/contracts/","@pancakeswap/=node_modules/@pancakeswap/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/v3-periphery/contracts/lens/QuoterV2_flattened.sol":"TickBitmap"},"evmVersion":"istanbul","libraries":{}},"sources":{"src/v3-periphery/contracts/lens/QuoterV2_flattened.sol":{"keccak256":"0xdfeb915caf4066d17857bcb8b16080ac111be679311484f653f9ad54d5fd7b9f","urls":["bzz-raw://ad9c2d4286068a4b05b71a0af682a05f955c75ec978ae12d4d014fccb9fcb7aa","dweb:/ipfs/QmXZAvaoTAFQGjnJnEYumjVyC1ZyXaeDGSTczVPF1UHY5J"],"license":null}},"version":1},"id":246}